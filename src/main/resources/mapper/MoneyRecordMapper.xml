<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.money.dal.mapper.MoneyRecordMapper">
  <resultMap id="BaseResultMap" type="org.money.model.po.MoneyRecordPO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="reverse" jdbcType="INTEGER" property="reverse" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_time" jdbcType="BIGINT" property="payTime" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <delete id="deleteBatch" parameterType="java.lang.Long">
    delete from money_record
    where id in
    <foreach collection="list" item="id" open="(" separator="," close=")">
    #{id}
    </foreach>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="org.money.model.po.MoneyRecordPO">
    insert into money_record (user_id, title, amount,
      reverse, category_id, remark, 
      pay_time, create_time, update_time
      )
    values (#{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT},
    #{reverse,jdbcType=INTEGER}, #{categoryId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR},
      #{payTime,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.money.model.po.MoneyRecordPO">
    update money_record
    set
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="reverse != null">
        reverse = #{reverse,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=BIGINT},
      </if>
      update_time = #{updateTime,jdbcType=BIGINT}
    <where>
        id = #{id,jdbcType=BIGINT} AND
        user_id = #{userId,jdbcType=BIGINT}
    </where>
  </update>
  <select id="selectByTime" resultMap="BaseResultMap">
    select *
    from money_record
    <where>
      user_id = #{userId,jdbcType=BIGINT} AND
      pay_time &gt; #{startTime,jdbcType=BIGINT} AND
      pay_time &lt; #{endTime,jdbcType=BIGINT}
    </where>
  </select>
</mapper>